<?xml version="1.0" ?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<!-- <robot
  name="sentinel_bot"> -->
  <robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="sentinel">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="-0.00126360168711622 -2.15210505719397E-05 0.0244518092797932"
        rpy="0 0 0" />
      <mass
        value="0.8" />
      <inertia
        ixx="0.000625500527952296"
        ixy="-2.93764597872576E-06"
        ixz="1.82259442003638E-06"
        iyy="0.000872485024060122"
        iyz="3.17767403168635E-07"
        izz="0.00105519511424983" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://sentinel_bot/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 0.937254901960784 0.137254901960784 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://sentinel_bot/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="base_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Orange</material>
  </gazebo>

  <link
    name="Left_wheel_link">
    <inertial>
      <origin
        xyz="-4.1176E-10 3.0207E-11 0.0042086"
        rpy="0 0 0" />
      <mass
        value="0.023896" />
      <inertia
        ixx="7.625E-06"
        ixy="-4.7831E-15"
        ixz="-5.6353E-15"
        iyy="7.6248E-06"
        iyz="-4.5111E-16"
        izz="1.4592E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://sentinel_bot/meshes/Left_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://sentinel_bot/meshes/Left_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Left_wheel_joint"
    type="continuous">
    <origin
      xyz="-0.00023583 0.052 -0.012"
      rpy="-1.5708 -0.71575 0" />
    <parent
      link="base_link" />
    <child
      link="Left_wheel_link" />
    <axis
      xyz="0 0 1" />
    <limit
      effort="100"
      velocity="100" />
    <dynamics
      friction="0.1" />
  </joint>

 <gazebo reference="Left_wheel_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Gray</material>
  </gazebo>

  <link
    name="Right_wheel_link">
    <inertial>
      <origin
        xyz="4.1176E-10 3.0207E-11 -0.011709"
        rpy="0 0 0" />
      <mass
        value="0.023896" />
      <inertia
        ixx="7.625E-06"
        ixy="4.7831E-15"
        ixz="-5.6353E-15"
        iyy="7.6248E-06"
        iyz="4.5111E-16"
        izz="1.4592E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://sentinel_bot/meshes/Right_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://sentinel_bot/meshes/Right_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Right_wheel_joint"
    type="continuous">
    <origin
      xyz="-0.00023583 -0.0445 -0.012"
      rpy="-1.5708 -0.91629 0" />
    <parent
      link="base_link" />
    <child
      link="Right_wheel_link" />
    <axis
      xyz="0 0 1" />
    <limit
      effort="100"
      velocity="100" />
    <dynamics
      friction="0.1" />
  </joint>

 <gazebo reference="Right_wheel_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Gray</material>
  </gazebo>

  <link
    name="Deep_camera_link">
    <inertial>
      <origin
        xyz="-0.0042251 0.0032378 -0.0020974"
        rpy="0 0 0" />
      <mass
        value="0.048201" />
      <inertia
        ixx="2.7391E-05"
        ixy="-4.2599E-07"
        ixz="7.5493E-09"
        iyy="3.3506E-06"
        iyz="2.1161E-09"
        izz="2.6652E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://sentinel_bot/meshes/Deep_camera_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.77647 0.75686 0.73725 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://sentinel_bot/meshes/Deep_camera_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Deep_camera_joint"
    type="fixed">
    <origin
      xyz="0.067909 -0.0033318 0.047549"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="Deep_camera_link" />
    <axis
      xyz="0 0 0" />
    <limit
      lower="0"
      upper="0"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="Lidar_link">
    <inertial>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <mass
        value="0.1" />
      <inertia
        ixx="0.001"
        ixy="0"
        ixz="0"
        iyy="0.001"
        iyz="0"
        izz="0.001" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://sentinel_bot/meshes/Lidar_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://sentinel_bot/meshes/Lidar_link.STL" />
      </geometry>
    </collision>
  </link>

 <gazebo reference="Deep_camera_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <joint
    name="Lidar_joint"
    type="fixed">
    <origin
      xyz="-0.00023583 0 0.13965"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="Lidar_link" />
    <axis
      xyz="0 0 0" />
  </joint>

 <gazebo reference="Lidar_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Black</material>
  </gazebo>

<!-- //////////////////////////////////////////////////////////// -->

  <!-- <joint
    name="Lidar_joint"
    type="fixed">
    <origin
      xyz="0.0 0 0.02"
      rpy="0 -0.087 0" />
    <parent
      link="Lidar" />
    <child
      link="Lidar_link" />
    <axis
      xyz="1 0 0" />
  </joint> -->

  <!-- <link name="imu_link"/>
  <joint
    name="imu_joint"
    type="fixed">
    <origin
      xyz="0.0 0 0.0"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="imu_link" />
    <axis
      xyz="1 0 0" />
  </joint> -->


  <!--LIDAR CONFIGURATION-->

  <gazebo reference="Lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>240</samples>
            <resolution>1.000000</resolution>
            <min_angle>-3.1416</min_angle>
            <max_angle>3.1416</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.07</min>
          <max>5.0</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=laser_scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>Lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="Lidar_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Black</material>
  </gazebo>

    <!--IMU sensor-->

  <!-- <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>imu_data</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu_data</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.005</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>true</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo> -->

  <gazebo>
    <plugin name="two_wheeled_robot_diff_drive" filename="libgazebo_ros_diff_drive.so">
 
      <update_rate>100</update_rate>
      
      <!-- wheels -->
      <left_joint>Left_wheel_joint</left_joint>
      <right_joint>Right_wheel_joint</right_joint>
 
      <!-- kinematics -->
      <wheel_separation>0.15</wheel_separation>
      <wheel_diameter>0.06</wheel_diameter>
 
      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>20.0</max_wheel_acceleration>
 
      <!-- Receive velocity commands on this ROS topic -->
      <command_topic>cmd_vel</command_topic>
 
      <!-- output -->
      <!-- When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>
 
      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->  
      <publish_odom_tf>true</publish_odom_tf>
     
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->  
      <publish_wheel_tf>true</publish_wheel_tf>
 
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom_link</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
 
      <odometry_source>1</odometry_source>
      <ros>
        <remapping>odom:=wheel/odometry</remapping>
      </ros>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_joint_state_publisher"
        filename="libgazebo_ros_joint_state_publisher.so">
        <update_rate>100</update_rate>
        <joint_name>Deep_camera_joint</joint_name>
        <joint_name>Lidar_joint</joint_name>
    </plugin>
  </gazebo>


</robot>